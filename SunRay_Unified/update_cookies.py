#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è cookies –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É Cortin.
–ú–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ cron.
"""

import json
import os
import re
import sqlite3
import subprocess
from pathlib import Path
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.options import Options
import time

def get_cookies_from_arc_database():
    """–ü–æ–ª—É—á–∞–µ—Ç cookies –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Arc –±—Ä–∞—É–∑–µ—Ä–∞"""
    
    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Arc (–º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤–µ—Ä—Å–∏–∏)
    arc_paths = [
        "~/Library/Application Support/Arc/User Data/Default/Cookies",
        "~/Library/Application Support/Arc/User Data/Profile 1/Cookies",
        "~/Library/Application Support/Company/Arc/User Data/Default/Cookies"
    ]
    
    cookies_db_path = None
    for path in arc_paths:
        expanded_path = Path(path).expanduser()
        if expanded_path.exists():
            cookies_db_path = expanded_path
            break
    
    if not cookies_db_path:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö cookies Arc")
        return None
    
    try:
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∫–æ–ø–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (Arc –º–æ–∂–µ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø)
        temp_db = "/tmp/arc_cookies_temp.db"
        subprocess.run(["cp", str(cookies_db_path), temp_db], check=True)
        
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(temp_db)
        cursor = conn.cursor()
        
        # –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è cookies —Å —Å–∞–π—Ç–∞ cortin.ru
        query = """
        SELECT name, value 
        FROM cookies 
        WHERE host_key LIKE '%cortin.ru%' 
        AND (name = 'PHPSESSID' OR name = '_identity')
        """
        
        cursor.execute(query)
        results = cursor.fetchall()
        
        cookies = {}
        for name, value in results:
            cookies[name] = value
        
        conn.close()
        os.remove(temp_db)
        
        if 'PHPSESSID' in cookies and '_identity' in cookies:
            return cookies
        else:
            print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ cookies –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Arc")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Arc: {e}")
        return None

def get_cookies_manual_input():
    """–ü–æ–ª—É—á–∞–µ—Ç cookies —á–µ—Ä–µ–∑ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥"""
    print("\n=== –†–£–ß–ù–û–ô –í–í–û–î COOKIES ===")
    print("1. –û—Ç–∫—Ä–æ–π—Ç–µ Arc –±—Ä–∞—É–∑–µ—Ä")
    print("2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://sale.cortin.ru")
    print("3. –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ")
    print("4. –û—Ç–∫—Ä–æ–π—Ç–µ Developer Tools (F12 –∏–ª–∏ Cmd+Option+I)")
    print("5. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É 'Application' -> 'Storage' -> 'Cookies' -> 'https://sale.cortin.ru'")
    print("6. –ù–∞–π–¥–∏—Ç–µ cookies PHPSESSID –∏ _identity")
    print("7. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –Ω–∏–∂–µ")
    print("\n–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ JavaScript —Å–∫—Ä–∏–ø—Ç –∏–∑ —Ñ–∞–π–ª–∞ get_cookies_extension.js\n")
    
    phpsessid = input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ PHPSESSID: ").strip()
    identity = input("–í–≤–µ–¥–∏—Ç–µ –∑–Ω–∞—á–µ–Ω–∏–µ _identity: ").strip()
    
    if phpsessid and identity:
        return {
            'PHPSESSID': phpsessid,
            '_identity': identity
        }
    else:
        print("‚ùå –ù–µ –≤—Å–µ cookies –≤–≤–µ–¥–µ–Ω—ã")
        return None

def get_cookies_from_browser():
    """–ü–æ–ª—É—á–∞–µ—Ç cookies –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Chrome (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
    chrome_options = Options()
    chrome_options.add_argument("--no-sandbox")
    chrome_options.add_argument("--disable-dev-shm-usage")
    # –£–±—Ä–∞—Ç—å —ç—Ç—É —Å—Ç—Ä–æ–∫—É –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –±—Ä–∞—É–∑–µ—Ä
    # chrome_options.add_argument("--headless")
    
    try:
        driver = webdriver.Chrome(options=chrome_options)
    except Exception as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Chrome WebDriver: {e}")
        print("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ cookies")
        return None
    
    try:
        # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        driver.get("https://sale.cortin.ru/site/login")
        
        print("–û—Ç–∫—Ä–æ–π—Ç–µ –±—Ä–∞—É–∑–µ—Ä –∏ –∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ...")
        print("–ü–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –≤ –∫–æ–Ω—Å–æ–ª–∏...")
        input("–ù–∞–∂–º–∏—Ç–µ Enter –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ")
        
        # –ü–æ–ª—É—á–∞–µ–º cookies
        cookies = driver.get_cookies()
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ cookies
        phpsessid = None
        identity = None
        
        for cookie in cookies:
            if cookie['name'] == 'PHPSESSID':
                phpsessid = cookie['value']
            elif cookie['name'] == '_identity':
                identity = cookie['value']
        
        if phpsessid and identity:
            return {
                'PHPSESSID': phpsessid,
                '_identity': identity
            }
        else:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ cookies")
            return None
            
    finally:
        driver.quit()

def update_cookies_in_file(cookies_dict):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç cookies –≤ —Ñ–∞–π–ª–µ cortin_data.py"""
    
    file_path = "cortin_data.py"
    
    with open(file_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º PHPSESSID
    content = re.sub(
        r'"PHPSESSID":\s*"[^"]*"',
        f'"PHPSESSID": "{cookies_dict["PHPSESSID"]}"',
        content
    )
    
    # –ó–∞–º–µ–Ω—è–µ–º _identity (—ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã)
    identity_escaped = cookies_dict["_identity"].replace("\\", "\\\\").replace('"', '\\"')
    content = re.sub(
        r'"_identity":\s*"[^"]*"',
        f'"_identity": "{identity_escaped}"',
        content
    )
    
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"Cookies –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ —Ñ–∞–π–ª–µ {file_path}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîÑ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è cookies –¥–ª—è Arc –±—Ä–∞—É–∑–µ—Ä–∞...")
    
    new_cookies = None
    
    # –°–ø–æ—Å–æ–± 1: –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Arc
    print("\n1Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è cookies –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Arc...")
    new_cookies = get_cookies_from_arc_database()
    
    # –°–ø–æ—Å–æ–± 2: –†—É—á–Ω–æ–π –≤–≤–æ–¥ (–µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Å–ø–æ—Å–æ–± –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª)
    if not new_cookies:
        print("\n2Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Ä—É—á–Ω–æ–º—É –≤–≤–æ–¥—É cookies...")
        new_cookies = get_cookies_manual_input()
    
    # –°–ø–æ—Å–æ–± 3: Selenium (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω Chrome WebDriver)
    if not new_cookies:
        print("\n3Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —á–µ—Ä–µ–∑ Selenium...")
        new_cookies = get_cookies_from_browser()
    
    if new_cookies:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª
        update_cookies_in_file(new_cookies)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º backup cookies
        with open('cookies_backup.json', 'w', encoding='utf-8') as f:
            json.dump(new_cookies, f, ensure_ascii=False, indent=2)
        
        print("\n‚úÖ Cookies —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
        print("üìÅ Backup —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ cookies_backup.json")
        print("\nüìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ cookies:")
        print(f"PHPSESSID: {new_cookies['PHPSESSID'][:20]}...")
        print(f"_identity: {new_cookies['_identity'][:50]}...")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å cookies –Ω–∏ –æ–¥–Ω–∏–º –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤")
        print("\nüí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
        print("1. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å JavaScript —Å–∫—Ä–∏–ø—Ç –∏–∑ get_cookies_extension.js")
        print("2. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å cookies –≤—Ä—É—á–Ω—É—é –∏–∑ Developer Tools")
        print("3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Chrome –∏ ChromeDriver –¥–ª—è Selenium")

if __name__ == "__main__":
    main()